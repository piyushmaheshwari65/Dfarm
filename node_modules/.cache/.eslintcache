[{"/home/piyush/Documents/GitHub/Dfarm/src/index.js":"1","/home/piyush/Documents/GitHub/Dfarm/src/components/App.js":"2","/home/piyush/Documents/GitHub/Dfarm/src/serviceWorker.js":"3","/home/piyush/Documents/GitHub/Dfarm/src/components/Main.js":"4","/home/piyush/Documents/GitHub/Dfarm/src/components/Navbar.js":"5"},{"size":278,"mtime":1617439706445,"results":"6","hashOfConfig":"7"},{"size":3752,"mtime":1617439706421,"results":"8","hashOfConfig":"7"},{"size":4951,"mtime":1617439706449,"results":"9","hashOfConfig":"7"},{"size":3296,"mtime":1617439706421,"results":"10","hashOfConfig":"7"},{"size":1197,"mtime":1617439706421,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g5z8j8",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/piyush/Documents/GitHub/Dfarm/src/index.js",[],"/home/piyush/Documents/GitHub/Dfarm/src/components/App.js",[],"/home/piyush/Documents/GitHub/Dfarm/src/serviceWorker.js",[],"/home/piyush/Documents/GitHub/Dfarm/src/components/Main.js",["24","25"],"import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <h2>Share Image</h2>\n              <form onSubmit={(event) => {\n                event.preventDefault()\n                const description = this.imageDescription.value\n                this.props.uploadImage(description)\n              }} >\n                <input type='file' accept=\".jpg, .jpeg, .png, .bmp, .gif\" onChange={this.props.captureFile} />\n                  <div className=\"form-group mr-sm-2\">\n                    <br></br>\n                      <input\n                        id=\"imageDescription\"\n                        type=\"text\"\n                        ref={(input) => { this.imageDescription = input }}\n                        className=\"form-control\"\n                        placeholder=\"Image description...\"\n                        required />\n                  </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block btn-lg\">Upload!</button>\n              </form>\n              <p>&nbsp;</p>\n              { this.props.images.map((image, key) => {\n                return(\n                  <div className=\"card mb-4\" key={key} >\n                    <div className=\"card-header\">\n                      <img\n                        className='mr-2'\n                        width='30'\n                        height='30'\n                        src={`data:image/png;base64,${new Identicon(image.author, 30).toString()}`}\n                      />\n                      <small className=\"text-muted\">{image.author}</small>\n                    </div>\n                    <ul id=\"imageList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                        <p class=\"text-center\"><img src={`https://ipfs.infura.io/ipfs/${image.hash}`} style={{ maxWidth: '420px'}}/></p>\n                        <p>{image.description}</p>\n                      </li>\n                      <li key={key} className=\"list-group-item py-2\">\n                        <small className=\"float-left mt-1 text-muted\">\n                          TIPS: {window.web3.utils.fromWei(image.tipAmount.toString(), 'Ether')} ETH\n                        </small>\n                        <button\n                          className=\"btn btn-link btn-sm float-right pt-0\"\n                          name={image.id}\n                          onClick={(event) => {\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\n                            console.log(event.target.name, tipAmount)\n                            this.props.tipImageOwner(event.target.name, tipAmount)\n                          }}\n                        >\n                          TIP 0.1 ETH\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                )\n              })}\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;","/home/piyush/Documents/GitHub/Dfarm/src/components/Navbar.js",["26","27"],"import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport photo from '../photo.png'\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n          Dfarm : Farm photo tip dapp \n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span></span>\n            }\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;",{"ruleId":"28","severity":1,"message":"29","line":37,"column":23,"nodeType":"30","endLine":42,"endColumn":25},{"ruleId":"28","severity":1,"message":"29","line":47,"column":48,"nodeType":"30","endLine":47,"endColumn":133},{"ruleId":"31","severity":1,"message":"32","line":10,"column":9,"nodeType":"30","endLine":15,"endColumn":10},{"ruleId":"28","severity":1,"message":"29","line":25,"column":17,"nodeType":"30","endLine":30,"endColumn":17},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]